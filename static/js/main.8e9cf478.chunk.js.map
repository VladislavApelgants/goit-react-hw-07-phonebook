{"version":3,"sources":["components/App/App.module.scss","components/Form/Form.module.scss","components/Form/Form.js","components/redux/contacts/contacts-operations.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/redux/contacts/contacts-actions.js","components/App/App.js","components/redux/contacts/contacts-selectors.js","components/redux/contacts/contacts-reduser.js","components/redux/store.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","inputChange","e","currentTarget","value","console","log","preventDefault","target","phone","className","s","form","type","pattern","title","required","onChange","btnSend","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","resp","data","addContactsItem","text","item","post","deleteContacts","id","delete","ContactList","dispatch","useDispatch","contact__list","map","contact__item","contact__name","contact__number","contact__button","onClick","Filter","popTypes","PropTypes","string","isRequired","func","filterAction","createAction","App","filter","useSelector","state","contacts","getFilter","items","getItems","load","loading","getLoad","useEffect","phonebook","find","contact","alert","containerOverflow","length","lowerCase","toLowerCase","includes","getFiltered","contactsFilter","createReducer","payload","contactsItem","fulfilled","error","rejected","_","pending","combineReducers","rootReduser","contactsReduser","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9cf478.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__1BnXQ\",\"title\":\"App_title__2xxf8\",\"containerOverflow\":\"App_containerOverflow__2lcNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2toBZ\",\"btnSend\":\"Form_btnSend__1T0f-\"};","import { useState } from 'react';\nimport s from './Form.module.scss';\nimport PropTypes from 'prop-types';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('Упс, при вводе что-то пошло не так');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const phone = e.target.number.value;\n    onSubmit(name, phone);\n    reset();\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={inputChange}\n        />\n      </label>\n      <label>\n        <span>Number</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={inputChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.btnSend}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://61b8d87738f69a0017ce5dbc.mockapi.io/';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const resp = await axios.get('./contacts/contacts');\n    return resp.data;\n  },\n);\n\nexport const addContactsItem = createAsyncThunk(\n  'contacts/contactsItem',\n  async text => {\n    const item = {\n      name: text.name,\n      phone: text.phone,\n    };\n\n    const resp = await axios.post('/contacts/contacts', item);\n    return resp.data;\n  },\n);\n\nexport const deleteContacts = createAsyncThunk('contacts/delete', async id => {\n  await axios.delete(`/contacts/contacts/${id}`);\n  return id;\n});\n","import s from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../redux/contacts/contacts-operations';\n\nfunction ContactList({ data }) {\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.contact__list}>\n      {data.map(e => (\n        <li key={e.id} className={s.contact__item}>\n          <span className={s.contact__name}>{e.name}:</span>\n          <span className={s.contact__number}>{e.phone}</span>\n          <button\n            type=\"button\"\n            className={s.contact__button}\n            onClick={() => dispatch(deleteContacts(e.id))}\n          ></button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Filter by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.popTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\nexport const filterAction = createAction('app/filter');\n","import React, { useEffect } from 'react';\nimport s from './App.module.scss';\nimport Form from '../Form';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterAction } from '../redux/contacts/contacts-actions';\nimport {\n  addContactsItem,\n  fetchContacts,\n} from '../redux/contacts/contacts-operations';\nimport {\n  getFilter,\n  getItems,\n  getLoad,\n} from '../redux/contacts/contacts-selectors';\n\nfunction App() {\n  const filter = useSelector(state => getFilter(state));\n  const items = useSelector(state => getItems(state));\n  const load = useSelector(state => getLoad(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function formSubmit(name, phone) {\n    if (items.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return;\n    }\n\n    return dispatch(addContactsItem({ name, phone }));\n  }\n\n  function getFiltered() {\n    const lowerCase = filter && filter.toLowerCase();\n    return items.filter(\n      contact => contact.name && contact.name.toLowerCase().includes(lowerCase),\n    );\n  }\n\n  function filt(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'filter':\n        dispatch(filterAction(value));\n        break;\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className={s.phonebook}>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form onSubmit={formSubmit} />\n      <div className=\"contacts\">\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={filt} />\n        <div className={s.containerOverflow}>\n          {load && <p>Load...</p>}\n          {items.length !== 0 ? (\n            <ContactList data={getFiltered()} />\n          ) : (\n            <p>There is nothing here yet</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const getFilter = state => state.contacts.filter;\n\nexport const getItems = state => state.contacts.item;\n\nexport const getLoad = state => state.contacts.loading;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { filterAction } from './contacts-actions';\nimport {\n  fetchContacts,\n  addContactsItem,\n  deleteContacts,\n} from './contacts-operations';\n\nconst contactsFilter = createReducer('', {\n  [filterAction]: (state, { payload }) => payload,\n});\n\nconst contactsItem = createReducer([], {\n  [fetchContacts.fulfilled]: (state, { payload }) => payload,\n\n  [addContactsItem.fulfilled]: (state, { payload }) => {\n    return [payload, ...state];\n  },\n\n  [deleteContacts.fulfilled]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { error }) => console.log(error),\n  [fetchContacts.pending]: null,\n\n  [addContactsItem.rejected]: (_, { error }) => console.log(error),\n  [addContactsItem.pending]: null,\n\n  [deleteContacts.rejected]: (_, { error }) => console.log(error),\n  [deleteContacts.pending]: null,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContactsItem.pending]: () => true,\n  [addContactsItem.fulfilled]: () => false,\n  [addContactsItem.rejected]: () => false,\n\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n});\n\nexport default combineReducers({\n  filter: contactsFilter,\n  item: contactsItem,\n  error,\n  loading,\n});\n","import { combineReducers } from 'redux';\nimport contactsReduser from './contacts/contacts-reduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst rootReduser = combineReducers({\n  contacts: contactsReduser,\n});\n\nconst store = configureStore({\n  reducer: rootReduser,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\nimport { store } from './components/redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__14CLv\",\"contact__item\":\"ContactList_contact__item__2OyGc\",\"contact__number\":\"ContactList_contact__number__16Z5f\",\"contact__button\":\"ContactList_contact__button__fYK4y\"};"],"sourceRoot":""}